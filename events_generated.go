package disgo

// Warning: This file has been automatically generated by generate/eventmethods/main.go
// Do NOT make changes here, instead adapt events.go and run go generate

import "encoding/json"

func (*GuildCreateEvent) eventName() string {
	return "GUILD_CREATE"
}

func (e *GuildCreateEvent) setSession(s *Session) {
	e.Guild = s.registerGuild(e.Guild)
}

func (e *GuildCreateEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(e.Guild)
}

func (e *GuildCreateEvent) UnmarshalJSON(b []byte) error {
	e.Guild = &Guild{}
	return json.Unmarshal(b, &e.Guild)
}

func (*MessageCreateEvent) eventName() string {
	return "MESSAGE_CREATE"
}

func (e *MessageCreateEvent) setSession(s *Session) {
}

func (e *MessageCreateEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(e.Message)
}

func (e *MessageCreateEvent) UnmarshalJSON(b []byte) error {
	e.Message = &Message{}
	return json.Unmarshal(b, &e.Message)
}

func (*MessageDeleteEvent) eventName() string {
	return "MESSAGE_DELETE"
}

func (e *MessageDeleteEvent) setSession(s *Session) {
}

func (*ReadyEvent) eventName() string {
	return "READY"
}

func (e *ReadyEvent) setSession(s *Session) {
	e.User = s.registerUser(e.User)
	for i, p := range e.Guilds {
		e.Guilds[i] = s.registerGuild(p)
	}
}

func (*ResumedEvent) eventName() string {
	return "RESUMED"
}

func (e *ResumedEvent) setSession(s *Session) {
}

func (*TypingStartEvent) eventName() string {
	return "TYPING_START"
}

func (e *TypingStartEvent) setSession(s *Session) {
}
